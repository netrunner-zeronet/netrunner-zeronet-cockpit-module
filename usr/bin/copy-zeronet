#!/bin/env python3

"""
Python script that copies a ZeroNet instance to another drive

Usage:
copy-zeronet from to

Exit codes:
0 - all went well
1 - invalid arguments supplied
2 - No files were found to copy (check permissions?)
3 - DBus service already running (already copying something?)
4 - An error occurred while copying (also emitted as DBus signal "Failed")

DBus:
Service Name:
com.netrunner.zeronet.cockpit.copier

Signals (namespace com.netrunner.zeronet)

FilesCounted - emitted before copy starts when the number of files to be copied is known
Progress - peridocially reported with a percentage (0-99) of how many files were copied
Finished - copying finished successfully
Failed - copying failed (argument "s" contains exception message)
"""

import dbus, dbus.service, dbus.exceptions
import sys
import os
import shutil
import math

from time import sleep # FIXME

from dbus.mainloop.glib import DBusGMainLoop

class DBusService(dbus.service.Object):
    def __init__(self, path):
        dbus.service.Object.__init__(self, dbus.SessionBus(), path)

    @dbus.service.signal(dbus_interface="com.netrunner.zeronet")
    def FilesCounted(self, count):
        pass

    @dbus.service.signal(dbus_interface="com.netrunner.zeronet",
                         signature="u")
    def Progress(self, percent):
        pass

    @dbus.service.signal(dbus_interface="com.netrunner.zeronet")
    def Finished(self):
        pass

    @dbus.service.signal(dbus_interface="com.netrunner.zeronet")
    def Failed(self, errorString):
        pass


if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Invalid arguments")
        sys.exit(1)

    src = sys.argv[1]
    dest = sys.argv[2]

    print("Copy stuff from", src, "to", dest)

    # Count total number of files for progress reporting
    files = []
    if os.path.isdir(src):
        for path, dirs, filenames in os.walk(src):
            files.extend(filenames)

    filesCount = len(files)

    if filesCount == 0:
        print("No files found to copy")
        sys.exit(2)

    DBusGMainLoop(set_as_default=True)
    #GLib.MainLoop().run()


    try:
        bus_name = dbus.service.BusName("com.netrunner.zeronet.cockpit.copier",
                                        bus = dbus.SessionBus(),
                                        do_not_queue = True)
    except dbus.exceptions.NameExistsException:
        print("DBus service is already running")
        sys.exit(3)

    dbusService = DBusService("/")
    dbusService.FilesCounted(filesCount)

    print("Copying", filesCount, "from", src, "to", dest)

    copiedCount = 0

    # Ensure we only report on dbus every percent, not every file, which spams the bus
    reportAfter = max(1, math.ceil(filesCount / 100))

    try:
        for path, dirs, filenames in os.walk(src):
            for directory in dirs:
                destDir = path.replace(src,dest)
                # FIXME Enable once cockpit is set up and we can make sure we don't break things :)
                #if not os.path.exists(destDir):
                    #os.makedirs(destDir)

            for sfile in filenames:
                srcFile = os.path.join(path, sfile)

                destFile = os.path.join(path.replace(src, dest), sfile)

                # FIXME Enable once cockpit is set up and we can make sure we don't break things :)
                #shutil.copy(srcFile, destFile)

                copiedCount += 1

                if math.fmod(copiedCount, reportAfter) == 0:
                    dbusService.Progress(round((copiedCount / filesCount) * 100))

    except Exception as e:
        print("Exception file copying", str(e))
        dbusService.Failed(str(e))
        sys.exit(4)

    print("Done copying")
    dbusService.Finished()
    sys.exit(0)
